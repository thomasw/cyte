<?php
/****
* Copyright 2007 Thomas Welfley and Greg Allard
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
****/
/**
*	This file is for outputting post handler errors.
*
*	Author: Thomas Welfley
*	Date: 10 / 17 / 2005
*	Updated to new key format: 2/25/07
*	Version: 0.0.3
*
*	Parameters:	form - specifies which post handler to output errors for. If not specified, key will output errors for any submitted post handler.
*				id - used to specify what you want the id of the printed list to be
*				class - used to specify what you want the class of the printed list to be.
*	container tag: no
*	Special notes: The or operator, "||", can be used inside the value for "form" to allow a developer to specify multiple forms.
*	Example 1:
*	<cyte:post_errors form="login" /> 
*	Example 2:
* 	<cyte:post_errors form="login||search||contact_form" />
*/
	
class post_errors extends key {
	
	public $form;					// List of forms to output errors for.
	public $class;					// html class attribute
	public $id;						// html id attribute
		
	private $form_list;				// Array of forms to output error messages for.
	private $error_messages;		// An array of error messages generated by the post_handler that just executed.	
	private $executed_post_handler;	// The post handler the just executed
	
	function check_attributes() {
		# Check if form was specified, and if it was, split it apart by  ||
		if(!isset($this->form) || $this->form == '') {
			$this->form_list = array();
		} else {
			$this->form_list = explode('||', $this->form);
		}
		
		# Setup class	
		if(trim($this->class) != '') {
			$this->class = ' class="'.$this->class.'"';
		}
		
		# Setup id	
		if(trim($this->id) != '') {
			$this->id = ' id="'.$this->id.'"';
		}
		
		# Get the current list of post error messages
		$this->error_messages = $this->page_request_controller->post_errors;
		
		# Get the post handler that executed - if none, fail.
		if(isset($_POST['post_handler'])) {
			$this->executed_post_handler = $_POST['post_handler'];
		} else {
			$this->failed = TRUE;
			return;
		}
		
		# Fail if there were no errors		
		if(count($this->error_messages) <= 0) {
			$this->failed = TRUE;
			return;
		}
	}
	
	private function generate_list() {
		$html_output = '';
		
		$html_output .= '<ul'.$this->id.$this->class.'>'."\n";
		
		foreach($this->error_messages as $error) {
			$html_output .= "\t".'<li>'.$error.'</li>'."\n";
		}	

		$html_output .= '</ul>';
		
		return $html_output;
	}
	
	function display() {
		if(!$this->failed) {
			if(in_array($this->executed_post_handler, $this->form_list) || count($this->form_list) == 0) {
				return $this->generate_list();
			}
			
			return '';
		}
	}
	
}
?>